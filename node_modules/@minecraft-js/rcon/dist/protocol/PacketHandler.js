"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RCONPacketHandler = void 0;
const bufwrapper_1 = require("@minecraft-js/bufwrapper");
const node_process_1 = require("node:process");
const Int32LE_1 = require("../util/Int32LE");
const Packet_1 = require("./Packet");
class RCONPacketHandler {
    /**
     * Handle a packet
     * @param buffer Raw buffer
     * @returns All handled packets
     */
    handle(buffer) {
        const buf = new bufwrapper_1.BufWrapper(buffer);
        const length = (0, Int32LE_1.readInt32LE)(buf);
        const requestId = (0, Int32LE_1.readInt32LE)(buf);
        const type = (0, Int32LE_1.readInt32LE)(buf);
        const packet = new Packet_1.RCONPacket(buf);
        packet.read(type);
        // length of (RequestId+Type) + length of payload + length of null bytes
        if (length !== 4 * 2 + Buffer.byteLength(packet.payload) + 2)
            (0, node_process_1.emitWarning)("[RCON] Packet length doesn't match the length field of the packet");
        const handledPackets = [{ requestId, packet }];
        // If we have another packet in the same buffer
        if (buf.buffer.length > buf.offset) {
            const handlded = this.handle(buffer.subarray(buf.offset));
            handledPackets.push(...handlded);
        }
        return handledPackets;
    }
}
exports.RCONPacketHandler = RCONPacketHandler;
